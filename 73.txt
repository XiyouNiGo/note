为 isula inspect 提供 -s, --size 子命令，当查询的对象为容器时展示文件大小("SizeRw"、"SizeRootFs"等) CMD_OPT_TYPE_BOOL
为 isula inspect 提供 --type 子命令，对于指定的type(container、image等)进行查询 CMD_OPT_TYPE_STRING

volume、network

-s对image无效

CI/test_cases/basic_cases/images.bash

main -> run_command -> cmd_inspect_main

command_parse_args {command_parse_short_arg、command_parse_long_arg}
    /* no arguments */
    CMD_OPT_TYPE_BOOL,		无用？bool类型，作为附加选项，设置client_arguments中对应标志 ，案例：ps --all
    CMD_OPT_TYPE_BOOL_FALSE,	bool类型，通过util_str_to_bool进行转换并保存到data中，案例：logs --debug
    /* required arguments */
    CMD_OPT_TYPE_STRING,		字符串类型，只使用一次，案例：ps --format
    CMD_OPT_TYPE_STRING_DUP,	字符串类型，通过strdup()动态保存到data中供多次使用，案例：login --user
    CMD_OPT_TYPE_CALLBACK		保留类型，需经过cb处理才可使用，案例：restart --time

command_option_t.small = 0 -> print_options中归类到上一个small!=0的选项
print_common_help中qsort会进行排序，排不到-s后面

client_inspect：调用client_inspect_container、client_inspect_image检查容器、镜像（重头戏）

默认：container -> image
result != 0 -> 失败
找不到 -> 重新分配response，再找
找到 -> 判断response，复制到res_json
默认 找到->goto check 找不到->继续
特定 找到->goto check 找不到->goto out

增加宏INSPECT_STATUS_NO_SUCH_OBJECT、INSPECT_STATUS_NO_SUCH_TYPE来区分错误类型

ContainerInspect：ClientBase
response->json
container_inspect

怎么传参数？？

每层的diff即是文件系统在统一挂载时的挂载点
overlay2/overlay -> 联合挂载到merged
work： 工作目录（完成copy-on-write）

LowerDir对应的是容器的只读镜像层；diff
UpperDir为容器的可读写层； diff
MergedDir为底层只读镜像层和上层可读写容器层的统一视图。merged
WorkDir
每层的diff即是文件系统在统一挂载时的挂载点
link文件描述了该层标识符的精简版
试一下docker history

grpc的代码是通过api/services目录中的proto文件自动生成的。调用grpc的代码，可以参考client/connect/grpc目录中文件
src/client/connect/protocol_type.h
src/client/connect/grpc/grpc_containers_client.cc
src/api/services/containers/container.proto

重点讲：

client:
主 client_inspect
检验容器 client_inspect_container
grpc：
ContainerInspect InspectContainerRequest
struct：
src/client/connect/protocol_type.h：
isula_inspect_request、isula_inspect_response
--------------------------------------------------------
daemon:
回调函数 container_inspect_cb -> inspect_container_helper -> inspect_container 交给container_inspect_generate_json生成容器json
挂载点 mount_point_to_inspect

struct：
container_inspect
--------------------------------------------------------
others：
src/api/services/containers/container.proto：InspectContainerRequest/Respond
src/client/connect/grpc/grpc_containers_client.cc
src/cmd/isula/stream/exec.c
--------------------------------------------------------
lcr：
在src/json/schema/container/inspect-request.json里面加，直接整到/usr/local

rootfs.h?

restful？